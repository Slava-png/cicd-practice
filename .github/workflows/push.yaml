name: push workflow

on:
  push

jobs:
  prepare_dependencies:
    runs-on: ubuntu-latest

    steps:
    - name: pre actions/checkout@v4
      uses: actions/checkout@v4

    - name: get cached dependencies
      id: cache-python-deps
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-requirements-${{ hashFiles('~/.cache/pip') }}

    - name: Install dependencies
      if: steps.cache-python-deps.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
  run_tests:
    runs-on: ubuntu-latest
    needs: prepare_dependencies
    env:
      DB_NAME: app_db
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.SERVICE_CONATINER_POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.SERVICE_CONATINER_POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.DB_NAME }}
        ports:
          - 5432:5432

    steps:
    - name: pre actions/checkout@v4
      uses: actions/checkout@v4

    - name: pre actions/setup-python@v4
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: get cached dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-requirements-${{ hashFiles('~/.cache/pip') }}

    - name: Run tests
      env:
        DB_USER: ${{ secrets.SERVICE_CONATINER_POSTGRES_USER }}
        DB_PASSWORD: ${{ secrets.SERVICE_CONATINER_POSTGRES_PASSWORD }}
        DB_NAME: ${{ env.DB_NAME }}
        DB_HOST: localhost
        DB_PORT: 5432
      run: |
        python -m unittest discover -s tests -p "*.py"
